server:
  tomcat:
    uri-encoding: UTF-8
  error:
    include-exception: true
    include-message: always
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://localhost:3306/boot_cache?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: 123456
      # 连接池初始化大小
      initial-size: 5
      # 最小空闲连接数
      min-idle: 10
      # 最大连接数
      max-active: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,slf4j
      # 配置Servlet
      stat-view-servlet:
        # 是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
        enabled: true
        login-password: 123456
        login-username: admin
        url-pattern: /druid/*
      # 配置filter
      web-stat-filter:
        # 是否启用StatFilter默认值false
        enabled: true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.css
#    schema:
#      - classpath:sql/department.sql
#      - classpath:sql/employee.sql
    initialization-mode: always
  mvc:
    format:
      date: yyyy-MM-dd HH:mm:ss
    hiddenmethod:
      filter:
        enabled: true
  messages:
    basename: static.login
  thymeleaf:
    cache: false
  jpa:
    hibernate:
      # 是否创建数据表
      ddl-auto: update
      naming:
        # 表既有下划线，又有驼峰，而且还不想使用@Column详细标识
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    # 显示SQL
    show-sql: true
  redis:
    host: 192.168.1.8
  rabbitmq:
    host: 192.168.1.8
    username: guest
    password: guest
    port: 5672
  elasticsearch:
    rest:
      uris: http://192.168.1.8:9200
      username: root
      password: zjj0114

dubbo:
  application:
    name: provider-ticket
  registry:
    address: zookeeper://192.168.1.8:2181
    timeout: 25000
  scan:
    base-packages: com.example.hiboot.service.impl

management:
  endpoints:
    web:
      exposure:
        # 加载所有的端点，默认只加载了info、health
        include: '*'
  endpoint:
    health:
      show-details: always
    # 可以关闭指定的端点
    shutdown:
      enabled: false
